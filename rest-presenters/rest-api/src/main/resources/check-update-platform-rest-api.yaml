openapi: 3.0.3
info:
  title: CheckUpdatePlatform
  description: API дипломного проекта на тему "Платформа по отслеживанию обновлений веб-ресурсов"
  contact:
    email: victor_k02@mail.ru
    name: Victor Kochnev
    url: https://vk.com/laym0n
  version: 1.0.0
paths:
  /user/register:
    post:
      tags:
        - User
      summary: Регистарация нового пользователя
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequestBody'
      responses:
        200:
          description: успешная регистрация
        400:
          description: ошибка валидации данных
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        409:
          description: email уже используется
  /authentication:
    post:
      tags:
        - Authentication
      summary: Аутентификация пользователя
      operationId: authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequestBody'
      responses:
        200:
          description: успешная аутентификация
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/JwtTokenResponse'
        400:
          description: неуспешная аутентификация
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'

  /webresource/observing:
    post:
      tags:
        - WebResourceObserving
      summary: Добавление нового веб ресурса для отслеживания
      operationId: createObserving
      security:
        - JwtToken: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebResourceObservingAddRequestBody'
      responses:
        200:
          description: успешное добавление
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/WebResourceObserving'
        400:
          description: ошибка валидации данных
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'

  /webresource/observing/{observingId}/stop:
    put:
      tags:
        - WebResourceObserving
      summary: Остановка отслеживания веб ресурса
      operationId: stopObserve
      security:
        - JwtToken: [ ]
      parameters:
        - $ref: '#/components/parameters/WebResourceObservingId'
      responses:
        200:
          description: успешное удаление
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/WebResourceObserving'
        400:
          description: ошибка валидации данных
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'

  /plugin:
    post:
      tags:
        - Plugin
      summary: Добавить плагин на платформу
      operationId: createPlugin
      security:
        - JwtToken: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPluginRequestBody'
      responses:
        200:
          description: успешное создание
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AddPluginResponseBody'
        400:
          description: ошибка валидации данных
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'

components:
  parameters:
    WebResourceObservingId:
      name: observingId
      in: path
      description: id отслеживания веб ресурса
      required: true
      schema:
        type: string
        format: uuid

  securitySchemes:
    JwtToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserRegistrationRequestBody:
      type: object
      properties:
        email:
          type: string
          description: email для регистрации
          format: email
        password:
          type: string
          description: Пароль
      required:
        - email
        - password

    AuthenticationRequestBody:
      type: object
      properties:
        principal:
          type: string
        credentials:
          type: string
      required:
        - principal
        - credentials

    JwtTokenResponse:
      type: object
      properties:
        token:
          type: string
      required:
        - token

    WebResourceObservingAddRequestBody:
      type: object
      properties:
        resourceDescription:
          type: string
          description: описание вебресурса
        pluginId:
          type: string
          format: uuid
          description: id плагина

    AddPluginRequestBody:
      type: object
      properties:
        name:
          type: string
          description: название плагина
        baseUrl:
          type: string
          description: Префикс URL для взаимодействия с плагином
      required:
        - name
        - baseUrl

    AddPluginResponseBody:
      type: object
      properties:
        plugin:
          $ref: "#/components/schemas/Plugin"
        accessToken:
          type: string
          description: Токен для доступа
      required:
        - plugin
        - accessToken

    WebResourceObserving:
      type: object
      properties:
        webResourceDto:
          $ref: '#/components/schemas/WebResource'
        observeSettings:
          $ref: '#/components/schemas/ObserveSettings'
        status:
          $ref: '#/components/schemas/ObserveStatusEnum'
      required:
        - webResourceDto
        - observeSettings
        - status

    Plugin:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        baseUrl:
          type: string
      required:
        - id
        - name
        - baseUrl

    ObserveSettings:
      type: object
      properties:
        needNotify:
          type: boolean
      required:
        - needNotify

    ObserveStatusEnum:
      type: string
      enum:
        - OBSERVE
        - NOT_OBSERVE

    WebResource:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
      required:
        - id
        - name

    ErrorMessageDto:
      description: Сообщение с ошибкой
      properties:
        message:
          type: string
      required:
        - message
